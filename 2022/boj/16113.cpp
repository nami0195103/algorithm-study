//단순구현
#include <iostream>
using namespace std;

int n, width;
char str[100001];
char ans[20001];
char num[10][5][3] = { { {'#', '#', '#'}, {'#', '.', '#'}, {'#', '.', '#'}, {'#', '.', '#'}, {'#', '#', '#'} },
						{ {'#', '.'}, {'#', '.'}, {'#', '.'}, {'#', '.'}, {'#', '.'} },
						{ {'#', '#', '#'}, {'.', '.', '#'}, {'#', '#', '#'}, {'#', '.', '.'}, {'#', '#', '#'} },
						{ { '#', '#', '#' },{ '.', '.', '#' },{ '#', '#', '#' },{ '.', '.', '#' },{ '#', '#', '#' } },
						{ {'#', '.', '#'}, {'#', '.', '#'}, {'#', '#', '#'}, {'.', '.', '#'}, {'.', '.', '#'} },
						{ { '#', '#', '#' },{ '#', '.', '.' },{ '#', '#', '#' },{ '.', '.', '#' },{ '#', '#', '#' } },
						{ { '#', '#', '#' },{ '#', '.', '.' },{ '#', '#', '#' },{ '#', '.', '#' },{ '#', '#', '#' } },
						{ {'#', '#', '#'}, {'.', '.', '#'}, {'.', '.', '#'}, {'.', '.', '#'}, {'.', '.', '#'} },
						{ { '#', '#', '#' },{ '#', '.', '#' },{ '#', '#', '#' },{ '#', '.', '#' },{ '#', '#', '#' } },
						{ { '#', '#', '#' },{ '#', '.', '#' },{ '#', '#', '#' },{ '.', '.', '#' },{ '#', '#', '#' } } };

char calc(int idx) {
	int i, j, k;
	bool flag;

	//공백 확인
	flag = true;
	for (i = 0; i < 5 & flag; i++) {
		if (str[idx + i * width] != '.')
			flag = false;
	}
	if (flag)
		return '\0';

	//숫자
	for (i = 0; i < 10; i++) {	//숫자(인덱스)
		flag = true;
		for (k = 0; k < 3 && flag; k++) {	//너비
			for (j = 0; j < 5 && flag; j++) {	//높이
				if (num[i][j][k] != str[idx + k + width * j])
					flag = false;
			}
			if (i == 1 && (idx == width - 1 || k == 1) && flag)	//마지막줄이거나 num[1][][]과 일치할 때
				break;
		}
		if (flag)
			return '0' + i;
	}
}

int main() {
	int i, pos;

	scanf("%d\n%s", &n, str);
	
	i = 0, pos = 0;
	width = n / 5;
	while (i < width) {
		ans[pos] = calc(i);
		if (ans[pos] == '\0')
			i++;
		else if (ans[pos] == '1') {
			i += 2;
			pos++;
		}
		else {
			i += 4;
			pos++;
		}
	}
	
	ans[pos] = '\0';
	printf("%s\n", ans);

	return 0;
}
